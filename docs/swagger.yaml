consumes:
- application/json
definitions:
  models.Todo:
    properties:
      DeadLine:
        type: string
      Description:
        type: string
      Id:
        type: string
      IsComplete:
        type: boolean
      Name:
        type: string
    type: object
  models.User:
    properties:
      Email:
        type: string
      Login:
        type: string
      Password:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: simple golang pet project
  license:
    name: MIT
  termsOfService: http://swagger.io/terms/
  title: todo app
  version: "1.0"
paths:
  /v1/auth:
    post:
      consumes:
      - application/json
      parameters:
      - description: user's email
        in: formData
        name: email
        required: true
        type: string
      - description: user's password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Log in
      tags:
      - Auth service
  /v1/get:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: many models
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Get all user's todo
      tags:
      - Todo
  /v1/registration:
    put:
      consumes:
      - application/json
      parameters:
      - description: new user
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Registration user
      tags:
      - Auth service
  /v1/todo:
    delete:
      consumes:
      - application/json
      parameters:
      - description: todo id in stirng
        in: formData
        name: todo_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Delete todo from user
      tags:
      - Todo
    patch:
      consumes:
      - application/json
      parameters:
      - description: used for updated created todo
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Todo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Update todo for user
      tags:
      - Todo
    put:
      consumes:
      - application/json
      parameters:
      - description: todo
        in: body
        name: input
        schema:
          $ref: '#/definitions/models.Todo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Add todo for user
      tags:
      - Todo
  /v1/todo/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: todo id which get
        in: query
        name: todo_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: one model
          schema:
            $ref: '#/definitions/models.Todo'
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Get todo
      tags:
      - Todo
  /v1/user:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Delete user
      tags:
      - User
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Get user
      tags:
      - User
  /v1/user/email:
    patch:
      consumes:
      - application/json
      parameters:
      - description: new email
        in: formData
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Update emaail
      tags:
      - User
  /v1/user/login:
    patch:
      consumes:
      - application/json
      parameters:
      - description: new login
        in: formData
        name: login
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Update login
      tags:
      - User
  /v1/user/password:
    patch:
      consumes:
      - application/json
      parameters:
      - description: new password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update password
      tags:
      - User
produces:
- application/json
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: jwt token
    type: apiKey
swagger: "2.0"
